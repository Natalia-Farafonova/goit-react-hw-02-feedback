{"version":3,"sources":["Сomponents/Section/Section.js","App.js","index.js"],"names":["Section","title","children","App","state","good","neutral","bad","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAgBeA,MAdf,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,eAACF,EAAD,WACE,6BAAKC,IACJC,MCADC,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,4CAsBP,WAKE,OACE,8BAEE,cAAC,EAAD,CAASN,MAAQ,OAAjB,SACE,iD,GAnCQO,aA6DHL,IC5DfM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c24ca15e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <Section>\n      <h2>{title}</h2>\n      {children}\n    </Section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport Section from './Сomponents/Section/Section';\n// import Statistics from './Сomponents/Statistics/Statistics';\n// import FeedbackOptions from './Сomponents/FeedbackOptions/FeedbackOptions';\n// import Notification from './Сomponents/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  // handleIncrement = option => {\n  //   this.setState(prevState => {\n  //     return { [option]: prevState[option] + 1 };\n  //   });\n  // };\n\n  // countTotalFeedback() {\n  //   const totalValue = Object.values(this.state);\n  //   return totalValue.reduce((acc, value) => acc + value);\n  // }\n\n  // countPositiveFeedbackPercentage() {\n  //   const value = this.countTotalFeedback();\n  //   const percentage = Math.round((this.state.good / value) * 100);\n\n  //   if (!percentage) return 0;\n  //   return percentage;\n  // }\n\n  render() {\n    // const { good, neutral, bad } = this.state;\n    // const stateName = Object.keys(this.state);\n    // const value = this.countTotalFeedback();\n    // const percent = this.countPositiveFeedbackPercentage();\n    return (\n      <div>\n\n        <Section title = \"name\">\n          <h2>Natasha</h2>\n        </Section>\n        {/* <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={stateName}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {value === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={value}\n              positivePercentage={percent}\n            />\n          )}\n        </Section> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}